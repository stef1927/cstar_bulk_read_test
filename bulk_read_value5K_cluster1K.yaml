keyspace: bulk_read

keyspace_definition: |

  CREATE KEYSPACE bulk_read WITH replication = { 'class': 'SimpleStrategy', 'replication_factor':1 };

# A table with a partitions of 100 rows where each row has two integer keys and two values of 50 bytes each
# Compaction and compression are also disabled so we can better benchmark the read operations
table: value5K_cluster1K

table_definition:

  CREATE TABLE value5K_cluster1K (
    pk int,
    c1 int,
    v1 text,
    v2 text,
    PRIMARY KEY(pk, c1))
  WITH compaction = { 'class':'SizeTieredCompactionStrategy', 'enabled':false }
  AND compression = {};


columnspec:
  - name: pk

  - name: c1
    cluster: fixed(1K)

  - name: v1
    size: fixed(5K)

  - name: v2
    size: fixed(5K)

insert:
  partitions: fixed(1)  # the number of partitions
  select: fixed(1)/1  # the probability of visiting any row in the partition
  batchtype: UNLOGGED

queries:
  single_part_query:
    cql: select * from value5K_cluster1K where pk = ?
    fields: samerow

token_range_queries:
  all_columns_tr_query: 
    columns: '*'
    page_size: 5000

  c1_v1_v2_tr_query:
    columns: c1, v1, v2
    page_size: 5000

  v1_v2_tr_query:
    columns: v1, v2
    page_size: 5000
